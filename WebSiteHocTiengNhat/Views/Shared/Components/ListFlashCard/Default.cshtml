@model List<FlashCard>
@* 
<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
        <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
        <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
        <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
    </ol>
            @foreach (var flashcard in Model)
        {
    <div class="carousel-inner">

            <div class="carousel-item active">
                <img class="d-block w-100" src="..." alt="First slide">
            </div>
        
        <div class="carousel-item active">
            <img class="d-block w-100" src="..." alt="First slide">
        </div>
        <div class="carousel-item">
            <img class="d-block w-100" src="..." alt="Second slide">
        </div>
        <div class="carousel-item">
            <img class="d-block w-100" src="..." alt="Third slide">
        </div>
    </div>
    }
    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>
 *@
<div style="margin: 0 5px 0 50px;">
    <div class="row flashcard-container" style="gap: 7%;">
        @foreach (var flashcard in Model)
        {
            <div class="col-md-2" style="padding-top: 2%;">
                <div class="card-wrapper">
                    <div class="card-body-fl">
                        <div class="card-front">
                            <div class="content">
                                <p>@Html.Raw(flashcard.CardFront)</p>
                            </div>
                        </div>
                        <div class="card-back">
                            <div class="content">
                                <p>@Html.Raw(flashcard.CardBack)</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .card-wrapper {
        width: 20rem;
        height: 300px;
        margin: auto;
        perspective: 1000px; /* Tạo hiệu ứng 3D */
    }

    .card-body-fl {
        position: relative;
        width: 100%;
        height: 100%;
        transition: transform 0.7s; /* Thời gian chuyển đổi khi lật card */
        transform-style: preserve-3d; /* Bảo quản cấu trúc 3D khi lật */
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2), 0 5px 15px rgba(0, 0, 0, 0.19);
        border-radius: 15px;
    }

    .card-front, .card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden; /* Ẩn mặt sau khi chưa lật */
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #ffffff; /* Màu nền của card */
        border-radius: 15px;
        overflow: hidden;
    }

    .card-back {
        transform: rotateY(180deg); /* Lật mặt sau 180 độ */
    }

    .card-wrapper:hover .card-body-fl {
        transform: rotateY(180deg); /* Lật card khi hover */
    }

    .content {
        padding: 10px;
        text-align: center;
    }

    .btn-container {
        display: flex;
        justify-content: center;
        margin-top: 10px;
    }

    .btn-create-flashcard {
        padding: 10px 20px;
        background-color: #007bff;
        border-radius: 5px;
        text-decoration: none;
        color: white;
    }
</style>
